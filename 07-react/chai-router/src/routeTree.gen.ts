/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MakingChaiRouteImport } from './routes/making-chai'

const MakingChaiRoute = MakingChaiRouteImport.update({
  id: '/making-chai',
  path: '/making-chai',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/making-chai': typeof MakingChaiRoute
}
export interface FileRoutesByTo {
  '/making-chai': typeof MakingChaiRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/making-chai': typeof MakingChaiRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/making-chai'
  fileRoutesByTo: FileRoutesByTo
  to: '/making-chai'
  id: '__root__' | '/making-chai'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MakingChaiRoute: typeof MakingChaiRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/making-chai': {
      id: '/making-chai'
      path: '/making-chai'
      fullPath: '/making-chai'
      preLoaderRoute: typeof MakingChaiRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/making-chai' {
  const createFileRoute: CreateFileRoute<
    '/making-chai',
    FileRoutesByPath['/making-chai']['parentRoute'],
    FileRoutesByPath['/making-chai']['id'],
    FileRoutesByPath['/making-chai']['path'],
    FileRoutesByPath['/making-chai']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  MakingChaiRoute: MakingChaiRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
